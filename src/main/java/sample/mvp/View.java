/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package sample.mvp;

import javax.swing.SwingUtilities;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import java.awt.Color;

/**
 * @author eguchi
 */
public class View extends javax.swing.JFrame implements IView,ModelListener{

    private final Presenter presenter = new Presenter( this );

    public static void main( String args[] ){

        SwingUtilities.invokeLater( new Runnable(){
            public void run(){
                Model model = new Model();
                View view = new View( model );
                view.setVisible( true );
            }
        } );
    }

    /**
     * @param model
     */
    public View( Model model ){
        initComponents();
        setModel( model );
        addHeightChangeListener( new DocumentListener(){
            public void insertUpdate( DocumentEvent e ){
                presenter.heightChanged( e );
            }

            public void removeUpdate( DocumentEvent e ){
                presenter.heightChanged( e );
            }

            public void changedUpdate( DocumentEvent e ){
            }
        } );

        addWeightChangeListener( new DocumentListener(){
            public void insertUpdate( DocumentEvent e ){
                presenter.weightChanged( e );
            }

            public void removeUpdate( DocumentEvent e ){
                presenter.weightChanged( e );
            }

            public void changedUpdate( DocumentEvent e ){
            }
        } );

    }


    public void setModel( Model model ){
        Model oldModel = presenter.getModel();
        if( oldModel != null ){
            oldModel.removeModelListener( this );
        }
        presenter.setModel( model );
        model.addModelListener( this );

    }

    public void modelChanged( ModelEvent e ){
        Model model = presenter.getModel();
        if( !presenter.isNotifyEvent() ){
            weightField.setText( model.getWeight() );
            heightField.setText( model.getHeight() );
        }
        bmiField.setText( model.getBMI() );

    }

    public void setBMIBackground( Color bg ){
        bmiField.setBackground( bg );
    }

    public void addHeightChangeListener( DocumentListener l ){
        heightField.getDocument().addDocumentListener( l );
    }

    public void addWeightChangeListener( DocumentListener l ){
        weightField.getDocument().addDocumentListener( l );
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents(){
        java.awt.GridBagConstraints gridBagConstraints;

        bmiPanel = new javax.swing.JPanel();
        heightLabel = new javax.swing.JLabel();
        heightField = new javax.swing.JTextField();
        mLabel = new javax.swing.JLabel();
        weightLabel = new javax.swing.JLabel();
        weightField = new javax.swing.JTextField();
        kgLabel = new javax.swing.JLabel();
        bmiLabel = new javax.swing.JLabel();
        bmiField = new javax.swing.JTextField();

        setDefaultCloseOperation( javax.swing.WindowConstants.EXIT_ON_CLOSE );
        setTitle( "BMI checker" );
        setLocationByPlatform( true );
        setResizable( false );

        bmiPanel.setBorder( javax.swing.BorderFactory.createEmptyBorder( 5, 5, 5, 5 ) );
        bmiPanel.setLayout( new java.awt.GridBagLayout() );

        heightLabel.setText( "Height:" );
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets( 4, 2, 4, 6 );
        bmiPanel.add( heightLabel, gridBagConstraints );

        heightField.setName( "heightLabel" ); // NOI18N
        heightField.setPreferredSize( new java.awt.Dimension( 100, 21 ) );
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets( 4, 4, 4, 4 );
        bmiPanel.add( heightField, gridBagConstraints );

        mLabel.setText( "m" );
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets( 4, 2, 4, 2 );
        bmiPanel.add( mLabel, gridBagConstraints );

        weightLabel.setText( "Weight:" );
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets( 4, 2, 4, 6 );
        bmiPanel.add( weightLabel, gridBagConstraints );

        weightField.setName( "weightLabel" ); // NOI18N
        weightField.setPreferredSize( new java.awt.Dimension( 100, 21 ) );
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets( 4, 4, 4, 4 );
        bmiPanel.add( weightField, gridBagConstraints );

        kgLabel.setText( "kg" );
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets( 4, 2, 4, 2 );
        bmiPanel.add( kgLabel, gridBagConstraints );

        bmiLabel.setText( "BMI:" );
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets( 4, 2, 4, 6 );
        bmiPanel.add( bmiLabel, gridBagConstraints );

        bmiField.setEditable( false );
        bmiField.setDisabledTextColor( new java.awt.Color( 0, 0, 0 ) );
        bmiField.setName( "bmiLabel" ); // NOI18N
        bmiField.setPreferredSize( new java.awt.Dimension( 100, 21 ) );
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets( 4, 4, 4, 4 );
        bmiPanel.add( bmiField, gridBagConstraints );

        getContentPane().add( bmiPanel, java.awt.BorderLayout.CENTER );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bmiField;
    private javax.swing.JLabel bmiLabel;
    private javax.swing.JPanel bmiPanel;
    private javax.swing.JTextField heightField;
    private javax.swing.JLabel heightLabel;
    private javax.swing.JLabel kgLabel;
    private javax.swing.JLabel mLabel;
    private javax.swing.JTextField weightField;
    private javax.swing.JLabel weightLabel;
    // End of variables declaration//GEN-END:variables


}
